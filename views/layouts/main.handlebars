<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE-edge">
    <title>BrainFart</title>
    <meta name="description" content="">
    <meta name="viewport" content="width-device-width, initial-scale=1">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
	<script src="http://code.jquery.com/jquery-2.1.3.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
	<link href="https://fonts.googleapis.com/css?family=Press+Start+2P" rel="stylesheet">
	<link rel="stylesheet" type="text/css" href="assets/css/style.css">
    <link href="assets/css/hover.css" rel="stylesheet" media="all">
</head>
<!-- paralax scroll idea
first user sees home page with with start button and small nav bar on the top left for leader board and "how to play" tab.
-when clicked on Leaderboard, a window appears displaying the top 10 players scores and on the bottom a "back button". which when clicked on makes the window disappear. 
--when "how to play" button is clicked, a modal appears with rules for the user to read.

When the start button is clicked on the homePage, by using parallax scroll the users screen will slide down a panel.
--if possible as panel is sliding add dramatic music and lighting changes in background.

the game panel
*whether or not to leave nav bar with screen.
the user will see 10 boxes to choose from.
*if possible----try to have barrels do some sort of lively animation css effect.
when user clicks on box, noise is made and trivia window appears

the trivia window
user is displayed multiple choice question, with the question wrapped in a border,the timer starting at 30 seconds on the top right corner on the outside of the question border and the 4 (A,B,C,D) buttons underneath and outside of the border. 
*Should user be able to click on choice and then hit submit? or once the choice is clicked on, it is charged as final 

when choice is selected, text will display whether or not the user got the answer correct. 
* try and make bomb boxes make small explosion sound-->
<body>
    <div class="homepage">
        <button type="button" class="btn btn-primary-topNav hvr-float-shadow" data-toggle="modal" data-target="#modal-1">How to Play</button>
        <div class="modal fade" id="modal-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title">This is the heading</h3>
                    </div>
                    <div class="modal-body">
                        User starts with 3 lives
                        Game window displays 25 boxes 
                        All but 5 boxes will have trivia, the rest will have "bombs"
                        When the user chooses a bomb:
                            - questions around the bomb get more difficult
                            - no life lost
                            - ...what happens to the rest of the boxes?
                            - ...what happens to the bomb box that was just selected?
                        When the user chooses a box with a trivia question, the game window displays a multiple choice question with a timer set to 20 seconds:
                            - if the user gets the question right:
                                - ...what is the reward? (coin, points, etc..)
                                - ...should a bomb be revealed?
                                - ...will other boxes be affected? (any other boxes become easier?)
                                - ...what happens to the box that was just selected?
                            - if the user gets the question wrong or if time runs out:
                                - ...what will be a fair punishment? (lose life, add difficult trivia box, remove easiest trivia box, etc..?)

                    </div>
                    <div class="modal-footer">
                        <a href="" class="btn btn-default" data-dismiss="modal">Close</a>
                    </div>
                </div>
            </div>
        </div>

        <button type="button" class="btn btn-primary-topNav hvr-float-shadow" data-toggle="modal" data-target="#modal-2">LeaderBoard</button>
        <div class="modal fade" id="modal-2">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title">High Scores</h3>
                    </div>
                    <div class="modal-body">
                       player 1---------------10,329
                       <br>
                       player 2---------------10,239
                       <br>
                       player 3---------------8093
                       <br>
                       player 4---------------7439
                       <br>
                       player 5---------------7432
                       <br>
                       player 6---------------6539
                       <br>
                       player 7---------------6492
                       <br>
                       player 8---------------6432
                       <br>
                       player 9---------------5039
                       <br>
                       player 10--------------4995

                    </div>
                    <div class="modal-footer">
                        <a href="" class="btn btn-default" data-dismiss="modal">Close</a>
                    </div>
                </div>
            </div>
        </div>

                
        <center><img src="assets/images/project_logo2.png" alt="what image shows" height="500" width="500">
        </center>

         <center>
          <p>
            <button type="button" class="btn btn-primary btn-lg"><a href="#game_window">Play Now</a></button>
            <div id="bodyarea">

			{{{ body }}}
			</div>
            <div id="add">
			<form id="newScore">
    			<input type="text" id="name" placeholder="Your name"><br>
    			<input type="text" id="score" placeholder="Your score"><br><br><br>
      			<button id="test" type="submit"><span class="glyphicon glyphicon-pushpin"></span> Create Room</button>
          	</form>
          	<form id="roomtest">
          		<input type="text" id="room">
          		<button id="testroom" type="submit"><span class="glyphicon glyphicon-pushpin"></span> Join Room</button>
          	</form>
		</div>
		<div id="gameRooms">
			

		</div>
          </p>
        </center>
    </div>
    <!-- Test Div -->
    <div id="questionModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
         <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;  </button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
              </div>
              <div class="modal-body" id="questionDisplay">
                ...
              </div>
              <div>
              		<div id="choices">

					</div>
              </div>
              <div class="modal-footer">
                {{!-- <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> --}}
                {{!-- dont need this, we want users to answer the question  --}}
              </div>
            </div>
          </div>
    </div>

    <div id="game_window">
        <div class="game_screen">
			<div class="row">
				<div class="col-md-1">
				</div>
				<div class="col-md-2">
					<div id="testbuttonA1" data-box="#testbuttonA1" data-x="0" data-y="0" class="trivBox hvr-buzz">
						A1
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonA2" data-box="#testbuttonA2" data-x="1" data-y="0" class="trivBox hvr-wobble-skew">
						A2
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonA3" data-box="#testbuttonA3" data-x="2" data-y="0" class="trivBox hvr-pulse-grow">
						A3
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonA4" data-box="#testbuttonA4" data-x="3" data-y="0" class="trivBox hvr-pop">
						A4
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonA5" data-box="#testbuttonA5" data-x="4" data-y="0" class="trivBox hvr-push">
						A5
					</div>
				</div>
			</div>

			<div class="space">
			</div>

			<div class="row">
				<div class="col-md-1">
				</div>
				<div class="col-md-2">
					<div id="testbuttonB1" data-box="#testbuttonB1" data-x="0" data-y="1" class="trivBox hvr-buzz">
						B1
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonB2" data-box="#testbuttonB2" data-x="1" data-y="1" class="trivBox hvr-wobble-skew">
						B2
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonB3" data-box="#testbuttonB3" data-x="2" data-y="1" class="trivBox hvr-pulse-grow">
						B3
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonB4" data-box="#testbuttonB4" data-x="3" data-y="1" class="trivBox hvr-pop">
						B4
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonB5" data-box="#testbuttonB5" data-x="4" data-y="1" class="trivBox hvr-push">
						B5
					</div>
				</div>
			</div>

			<div class="space">
			</div>

			<div class="row">
				<div class="col-md-1">
				</div>
				<div class="col-md-2">
					<div id="testbuttonC1" data-box="#testbuttonC1" data-x="0" data-y="2" class="trivBox hvr-buzz">
						C1
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonC2" data-box="#testbuttonC2" data-x="1" data-y="2" class="trivBox hvr-wobble-skew">
						C2
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonC3" data-box="#testbuttonC3" data-x="2" data-y="2" class="trivBox hvr-pulse-grow">
						C3
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonC4" data-box="#testbuttonC4" data-x="3" data-y="2" class="trivBox hvr-pop">
						C4
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonC5" data-box="#testbuttonC5" data-x="4" data-y="2" class="trivBox hvr-push">
						C5
					</div>
				</div>
			</div>

			<div class="space">
			</div>

			<div class="row">
				<div class="col-md-1">
				</div>
				<div class="col-md-2">
					<div id="testbuttonD1" data-box="#testbuttonD1" data-x="0" data-y="3" class="trivBox hvr-buzz">
						D1
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonD2" data-box="#testbuttonD2" data-x="1" data-y="3" class="trivBox hvr-wobble-skew">
						D2
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonD3" data-box="#testbuttonD3" data-x="2" data-y="3" class="trivBox hvr-pulse-grow">
						D3
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonD4" data-box="#testbuttonD4" data-x="3" data-y="3" class="trivBox hvr-pop">
						D4
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonD5" data-box="#testbuttonD5" data-x="4" data-y="3" class="trivBox hvr-push">
						D5
					</div>
				</div>
			</div>

			<div class="space">
			</div>

			<div class="row">
				<div class="col-md-1">
				</div>
				<div class="col-md-2">
					<div id="testbuttonE1" data-box="#testbuttonE1" data-x="0" data-y="4" class="trivBox hvr-buzz">
						E1
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonE2" data-box="#testbuttonE2" data-x="1" data-y="4" class="trivBox hvr-wobble-skew">
						E2
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonE3" data-box="#testbuttonE3" data-x="2" data-y="4" class="trivBox hvr-pulse-grow">
						E3
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonE4" data-box="#testbuttonE4" data-x="3" data-y="4" class="trivBox hvr-pop">
						E4
					</div>
				</div>
				<div class="col-md-2">
					<div id="testbuttonE5" data-box="#testbuttonE5" data-x="4" data-y="4" class="trivBox hvr-push">
						E5
					</div>
				</div>
			</div>
			<div class="section">
                  <div class="section-header">
                    <h3 class="section-title">SCORE </h3>
                    <h3 id="displayScore"></h3>
                  </div>
                  <div class="section-body"> </div>
                  <div class="section-footer"> </div>

                  <div class="section-header"> 
                    <h3 class="section-title"> DECADES</h3>
                    {{!-- should remove this --}}
                  </div>
                <div class="section-body"> </div>
                <div class="section-footer"> </div>

                <div class="section-header">
                  <h3 class="section-title"> BOMBS REMAINING </h3>
                </div>
                <div class="section-header">
                  <h3 class="section-title"> SHARE </h3>
                </div>

                <div class="section-body"></div>
                <div class="section-body"></div>

                <div class="section-footer"></div>
                <div class="section-footer"></div>
            </div>
        </div>
    </div>
<script src="../assets/javascript/game.js"></script>
<script src="../socket.io/socket.io.js"></script>
<script>
$(document).ready(function() {
	var role;
	var mySocketId;
	var time = 10;
	var theQuestion ="";
	var score =0;
	var lives = 3;
	var allBoxes = [
			'#testbuttonA1', '#testbuttonA2', '#testbuttonA3', '#testbuttonA4', '#testbuttonA5', 
			'#testbuttonB1', '#testbuttonB2', '#testbuttonB3', '#testbuttonB4', '#testbuttonB5',
			'#testbuttonC1', '#testbuttonC2', '#testbuttonC3', '#testbuttonC4', '#testbuttonC5',
			'#testbuttonD1', '#testbuttonD2', '#testbuttonD3', '#testbuttonD4', '#testbuttonD5',
			'#testbuttonE1', '#testbuttonE2', '#testbuttonE3', '#testbuttonE4', '#testbuttonE5'
		];
	$('a[href*=#]').click(function() {
        if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'')
            && location.hostname == this.hostname) {
                var $target = $(this.hash);
                $target = $target.length && $target || $('[name=' + this.hash.slice(1) +']');
            if ($target.length) {
                var targetOffset = $target.offset().top;
                $('html,body').animate({scrollTop: targetOffset}, 1000);
                return false;
            }
        }
    });
	$('#game').hide();
	var socket = io.connect('http://localhost:3000');
	// socket.emit('displayRooms', {data: 'test'})
	// socket.on('showAllRooms', function (data) {
	// 	showRooms(data);
	// })
	socket.on('waitingForPlayer', function (data) {
		console.log(data);
		$('#gameRooms').append('<h2>' + data.message + '</h2>');
	})
	socket.on('newGameCreated', function(data) {
		gameInit(data)
	});
	socket.on('alertPlayers', function(data) {
		// alert(data.message)
		onStartCountdownTimer(data);
	});
	socket.on('sendQuestions', function(data) {
		initQuestions(data);
	});
	socket.on('')
	socket.on('roomDoesNotExist', function (data) {
		console.log(data)
		$('#gameRooms').html('<h2>' + data.message + '</h2>');
	});
	function gameInit(data) {
		gameId = data.gameId;
		mySocketId = data.mySocketId;
		role = 'player1';
		numOfPlayers = 1;
		console.log(gameId, role)
	}
	// function showRooms (data) {
	// 	console.log(data.allRooms);
	// 	for (var i = 0; i < data; i++) {
	// 		console.log(data)
	// 		// $('#gameRooms').append(data[i]);
	// 	}
		
	// }

	// socket.on('newGameCreated', function (data) {
	// 	console.log(data)
	// })
	// socket.on('score', function (data) {
	// 	if ($('.test').children().length === 10) {
	// 		$('.test').html('');
	// 	}
	// 	$('.test').append('<div>' + data.name + '</div><br>')
	// })
	$('#test').on('click', function(e) {
		e.preventDefault()
		var name = $('#name').val();
		var addScore = {
			name: $('#name').val(),
			score: parseInt($('#score').val())
		}
		console.log(addScore);
		socket.emit('createRoom', addScore);

		// $.post('/game/score', addScore).done(function (response) {
			
		// 	console.log(response);

		// })
	})
	$('#testroom').on('click', function(e) {
		e.preventDefault();
		var room = $('#room').val();
		role = 'player2'
		numOfPlayers = 2;
		console.log(role)
		updateNumOfPlayers(room);
		$('#room').val('');
	})

	function updateNumOfPlayers (room) {
		if (numOfPlayers === 2) {
			socket.emit('player2Connected', {playerRoom: room});
			$('#testroom').hide();
		}
	}
	$('.question').on('click', function () {
		alert('test')
	})
	function initQuestions(data) {
		$('#choices').html('');
		console.log(data)
		theQuestion = data.question;
		// console.log(theQuestion);
		// send questions to the boxes
		$('#questionDisplay').text(theQuestion.question);
		for (var i = 0; i < data.question.choices.length; i++) {
			// var buttonChoice = $('<button>', {
			// 	type: 'button',
			// 	name: 'choice',
			// 	class: 'submitChoice btn btn-default',
			// 	value: data.question.choices[i]
			// });
			// buttonChoice.text(data.question.choices[i]);
			var buttonChoice = '<button type="button" name="choice" class="submitChoice btn btn-default" value="' + data.question.choices[i] + '" data-dismiss="modal">' + data.question.choices[i] + '</button>';
			$('#choices').append(buttonChoice);
		}
		$('.trivBox').on('click', function () {
			var trivBoxThis = this;
			showQuestion(data, trivBoxThis);
		});
		$('#choices').on('click', 'button', function () {
			var choiceThis = this;
			checkAnswer(data, choiceThis, clicked_X, clicked_Y);
		});
	}
	function runTimer(data){
		timer = setInterval(function () {
			decreaseTime(data);
		}, 1000);
    };
    function decreaseTime(data){
    	time--;
    	$('#gameRooms').html('<h2>Get Ready! Time to begin: ' + time + '</h2>'); 
    	if (time === 0) {
    		clearInterval(timer);
    		$('#gameRooms').html('');
    		socket.emit('countdownFinished', data)
    	}
    };

	function onStartCountdownTimer (data) {
		console.log(data)
		runTimer(data);
	}


var bombs = [];

		// Fisher-Yates Shuffle Algorithm:
		Array.prototype.shuffle = function() {
			var i = this.length, j, temp;
			while(--i > 0) {
				j = Math.floor(Math.random() * (i+1));
				temp = this[j];
				this[j] = this[i];
				this[i] = temp;
			}
			return this;
		}
		var shuffledBoxes = allBoxes.shuffle();


		// Chooses which boxes will be bombs:
		for (var i = 0; i < 5; i++) {
			bombs[i] = shuffledBoxes[i];
		}
		console.log("The bombs are: " + bombs);


		var surroundingBoxes = [
			[-1,-1],
			[0,-1],
			[1,-1],
			[-1,0],
			[1,0],
			[-1,1],
			[0,1],
			[1,1]
		];

var clicked_X;
var clicked_Y;

function showQuestion(data, trivBoxThis) {
	clicked_X = $(trivBoxThis).data('x');
	clicked_Y = $(trivBoxThis).data('y');
	var clickedBomb = false;
	var surroundingBombs = 0;

	for (var i = 0; i < bombs.length; i++) {
		if (clicked_X === $(bombs[i]).data('x') && clicked_Y === $(bombs[i]).data('y')) {
			clickedBomb = true;
			$(trivBoxThis).empty().removeClass().append('<img src="assets/images/skull.gif">');
			laugh.play();
			bombBox();
		}
	}
	if (!clickedBomb) {
		console.log(theQuestion, 'test');
		triviaBox();

		for (var i = 0; i < surroundingBoxes.length; i++) {
			// var surroundingBox_X = ;
			// var surroundingBox_Y = ;
			if ((clicked_X + surroundingBoxes[i][0]) >= 0 && (clicked_X + surroundingBoxes[i][0]) <= 4 && 
				(clicked_Y + surroundingBoxes[i][1]) >= 0 && (clicked_Y + surroundingBoxes[i][1]) <= 4) {
				for (var j = 0; j < bombs.length; j++) {
					if ((clicked_X + surroundingBoxes[i][0]) === $(bombs[j]).data('x') && 
						(clicked_Y + surroundingBoxes[i][1]) === $(bombs[j]).data('y')) {
						surroundingBombs++;
					}
				}
			}
		}
		// bombCheck();
		console.log(trivBoxThis)
		$(trivBoxThis).empty().removeClass().append(surroundingBombs); // need to find better way instead of "empty().append()"
	}
};

	function triviaBox() {
		$("#questionModal").modal('show');
	}

	function checkAnswer(data, choiceThis, x, y) {
		var userAnswer = $(choiceThis).val();
		console.log(userAnswer);
		data.player = role;
		data.x = x;
		data.y = y;
		if (userAnswer === data.question.answer) {
			score++;
			console.log('correct!');
			data.score = score;
			socket.emit('answeredCorrectly', data);
		} else {
			console.log('wrong');
			lives--;
			socket.emit('answeredWrong', data)
		}
		$(choiceThis).off('click');
	}

})
// need to pull score from db and display on score h3
// set the clicked box to be the bomb box to send over to opponent
</script>
</body>
</html>

