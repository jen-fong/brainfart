<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE-edge">
    <title>BrainFart</title>
    <meta name="description" content="">
    <meta name="viewport" content="width-device-width, initial-scale=1">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
	<script src="http://code.jquery.com/jquery-2.1.3.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
	<link href="https://fonts.googleapis.com/css?family=Press+Start+2P" rel="stylesheet">
	<link rel="stylesheet" type="text/css" href="assets/css/style.css">
    <link href="assets/css/hover.css" rel="stylesheet" media="all">
</head>
<!-- paralax scroll idea
first user sees home page with with start button and small nav bar on the top left for leader board and "how to play" tab.
-when clicked on Leaderboard, a window appears displaying the top 10 players scores and on the bottom a "back button". which when clicked on makes the window disappear. 
--when "how to play" button is clicked, a modal appears with rules for the user to read.

When the start button is clicked on the homePage, by using parallax scroll the users screen will slide down a panel.
--if possible as panel is sliding add dramatic music and lighting changes in background.

the game panel
*whether or not to leave nav bar with screen.
the user will see 10 boxes to choose from.
*if possible----try to have barrels do some sort of lively animation css effect.
when user clicks on box, noise is made and trivia window appears

the trivia window
user is displayed multiple choice question, with the question wrapped in a border,the timer starting at 30 seconds on the top right corner on the outside of the question border and the 4 (A,B,C,D) buttons underneath and outside of the border. 
*Should user be able to click on choice and then hit submit? or once the choice is clicked on, it is charged as final 

when choice is selected, text will display whether or not the user got the answer correct. 
* try and make bomb boxes make small explosion sound-->
<body>
    <div class="homepage">
        <button type="button" class="btn btn-primary-topNav hvr-float-shadow" data-toggle="modal" data-target="#modal-1">How to Play</button>
        <div class="modal fade" id="modal-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title">Game Rules</h3>
                    </div>
                    <div class="modal-body">
                        - Each player will have 10 seconds to choose one of the 20
                        trivia boxes
                        <br><br>- 5 boxes have hidden bombs <br>
                        <br>- Each player will start with 3 lives <br>
                        <br>- The Objective is to answer as many trivia questions
                        correct to obtain points,without clicking on the "bomb boxes"
                        <br><br>- If the player gets a question wrong, a live
                        will be lost.<br>
                        <br>- If a player does not choose a question within
                        ten seconds, your time to answer the question 
                        will be deducted by "5" seconds.<br>
                        <br>- when a question is answered correctly, a number
                        will appear to show how many bombs are around that
                        question tile.
                        




                    </div>
                    <div class="modal-footer">
                        <a href="" class="btn btn-default" data-dismiss="modal">Close</a>
                    </div>
                </div>
            </div>
        </div>

        <button type="button" class="btn btn-primary-topNav hvr-float-shadow" data-toggle="modal" data-target="#modal-2">LeaderBoard</button>
        <div class="modal fade" id="modal-2">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title">High Scores</h3>
                    </div>
                    <div class="modal-body">
                       player 1---------------10,329
                       <br>
                       player 2---------------10,239
                       <br>
                       player 3---------------8093
                       <br>
                       player 4---------------7439
                       <br>
                       player 5---------------7432
                       <br>
                       player 6---------------6539
                       <br>
                       player 7---------------6492
                       <br>
                       player 8---------------6432
                       <br>
                       player 9---------------5039
                       <br>
                       player 10--------------4995

                    </div>
                    <div class="modal-footer">
                        <a href="" class="btn btn-default" data-dismiss="modal">Close</a>
                    </div>
                </div>
            </div>
        </div>

                
        <center><img src="assets/images/project_logo2.png" alt="what image shows" height="500" width="500">
        </center>

         <center>
          <p>
            <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#modal-3" id="showTheRooms">Play Now</button>
           <div class="modal fade" id="modal-3">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            {{!-- <h3 class="modal-title">
                            <button type="button" id="test" class="btn btn-default">Create Room</button>
                            <button type="button" id="testroom" class="btn btn-default">Join Room</button></h3> --}}
                            <div id="add">
								<form id="newScore">
					    			{{!-- <input type="text" id="name" placeholder="Your name"><br>
					    			<input type="text" id="score" placeholder="Your score"><br><br><br> --}}
					      			<button id="test" type="submit">Create Room</button>
					          	</form>
					          	
							</div> 

                        </div>
                        <div class="modal-body">
                           <h3>Available rooms</h3>
{{!--                            <form id="roomtest">
				          		<input type="text" id="room">
				          		<button id="testroom" type="submit">Join Room</button>
				          	</form> --}}
				          	<div id="displayRoom">
				          	</div>
                        </div>
                        <div class="modal-footer">
                            <a href="" class="btn btn-default" data-dismiss="modal">Close</a>
                        </div>
                    </div>
                </div>
            </div>
            <div id="bodyarea">
            	<div id="welcome">
            	</div>

			{{{ body }}}
			</div>
            
          </p>
        </center>
    </div>
    <!-- Test Div -->
    <div id="questionModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
         <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
                <div id="countdown2"></div>
              </div>
              <div class="modal-body" id="questionDisplay">
                ...
              </div>
              <div>
              		<div id="choices">

					</div>
              </div>
              <div class="modal-footer">
                {{!-- <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> --}}
                {{!-- dont need this, we want users to answer the question  --}}
              </div>
            </div>
          </div>
    </div>
    <div id="scoreModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
         <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Final</h4>
              </div>
              <div class="modal-body" id="winner">
                ...
              </div>
              <div>
              		<div id="score">

					</div>
              </div>
              <div class="modal-footer">
                {{!-- <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> --}}
                {{!-- dont need this, we want users to answer the question  --}}
              </div>
            </div>
          </div>
    </div>
    <div id="game_window">

        <div class="game_screen">
	        <div class="col-md-9">
	            <div class="row">
	                <div class="col-md-1">
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonA1" data-box="#testbuttonA1" data-x="0" data-y="0" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonA2" data-box="#testbuttonA2" data-x="1" data-y="0" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonA3" data-box="#testbuttonA3" data-x="2" data-y="0" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonA4" data-box="#testbuttonA4" data-x="3" data-y="0" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonA5" data-box="#testbuttonA5" data-x="4" data-y="0" class="trivBox hvr-bob">
	                    </div>
	                </div>
	            </div>

	            <div class="space">
	            </div>

	            <div class="row">
	                <div class="col-md-1">
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonB1" data-box="#testbuttonB1" data-x="0" data-y="1" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonB2" data-box="#testbuttonB2" data-x="1" data-y="1" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonB3" data-box="#testbuttonB3" data-x="2" data-y="1" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonB4" data-box="#testbuttonB4" data-x="3" data-y="1" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonB5" data-box="#testbuttonB5" data-x="4" data-y="1" class="trivBox hvr-bob">
	                    </div>
	                </div>
	            </div>

	            <div class="space">
	            </div>

	            <div class="row">
	                <div class="col-md-1">
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonC1" data-box="#testbuttonC1" data-x="0" data-y="2" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonC2" data-box="#testbuttonC2" data-x="1" data-y="2" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonC3" data-box="#testbuttonC3" data-x="2" data-y="2" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonC4" data-box="#testbuttonC4" data-x="3" data-y="2" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonC5" data-box="#testbuttonC5" data-x="4" data-y="2" class="trivBox hvr-bob">
	                    </div>
	                </div>
	            </div>

	            <div class="space">
	            </div>

	            <div class="row">
	                <div class="col-md-1">
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonD1" data-box="#testbuttonD1" data-x="0" data-y="3" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonD2" data-box="#testbuttonD2" data-x="1" data-y="3" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonD3" data-box="#testbuttonD3" data-x="2" data-y="3" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonD4" data-box="#testbuttonD4" data-x="3" data-y="3" class="trivBox hvr-bob">
	                    </div>
	                </div>
	                <div class="col-md-2">
	                    <div id="testbuttonD5" data-box="#testbuttonD5" data-x="4" data-y="3" class="trivBox hvr-bob">
	                    </div>
	                </div>
	            </div>

	            <div class="space">
	            </div>
	        </div>

            <div class="col-md-3" id="section-background">
                <div class="section">
                      <div class="section-header">
                        <h3 class="section-title-score">SCORE </h3>
                        <h2 class="score_number"></h2>
                      </div>
                      <div class="section-body"> </div>
                      <div class="section-footer"> </div>

                      <div class="section-header"> 
                        <h3 class="section-title-time"> TIME REMAINING</h3>
                        <div id="countdown"></div>
                      </div>
                    <div class="section-body"> </div>
                    <div class="section-footer"> </div>

                    <div class="section-header">

                    </div>
                    <div class="section-header">
                      <h3 class="section-title-playerLives"> LIVES </h3>
                      <h2 id="game_lives"></h2>
                    </div>

                    <div class="section-body"></div>
                    <div class="section-body"></div>

                    <div class="section-footer"></div>
                    <div class="section-footer"></div>
                </div>
            </div>    

		</div>
		<div id="gameRooms">
			test tesyt

		</div>
	</div>

<script src="assets/javascript/game.js"></script>
<script src="socket.io/socket.io.js"></script>
<script>
$(document).ready(function() {
	var role;
	var mySocketId;
	var questionData;
	var time = 10;
	var gameStarted = false;
	var theQuestion ="";
	var score = 0;
	var lives = 3;
	var clicked_Y;
	var clicked_X;

	var allBoxes = [
			'#testbuttonA1', '#testbuttonA2', '#testbuttonA3', '#testbuttonA4', '#testbuttonA5', 
			'#testbuttonB1', '#testbuttonB2', '#testbuttonB3', '#testbuttonB4', '#testbuttonB5',
			'#testbuttonC1', '#testbuttonC2', '#testbuttonC3', '#testbuttonC4', '#testbuttonC5',
			'#testbuttonD1', '#testbuttonD2', '#testbuttonD3', '#testbuttonD4', '#testbuttonD5'
		];
	$('#game_lives').html(lives);
	$('#score_number').html(score);

	$('a[href*=#]').click(function() {
        if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'')
            && location.hostname == this.hostname) {
                var $target = $(this.hash);
                $target = $target.length && $target || $('[name=' + this.hash.slice(1) +']');
            if ($target.length) {
                var targetOffset = $target.offset().top;
                $('html,body').animate({scrollTop: targetOffset}, 1000);
                return false;
            }
        }
    });
	var socket = io.connect('http://localhost:3000');
	socket.on('showAllRooms', function (data) {
		showRooms(data);
	})
	socket.on('waitingForPlayer', function (data) {
		$('#gameRooms').html('<h2>' + data.message + '</h2>');
	})
	socket.on('newGameCreated', function(data) {
		gameInit(data)
	});
	socket.on('alertPlayers', function(data) {
		// alert(data.message)
		onStartCountdownTimer(data);
	});
	socket.on('sendQuestions', function(data) {
		initQuestions(data);
	});
	socket.on('roomDoesNotExist', function (data) {
		console.log(data)
		$('#gameRooms').html('<h2>' + data.message + '</h2>');
	});
	socket.on('gameOver', function (data) {
		displayFinal(data);
	});
	socket.on('addedRoom', function (data) {
		addRoomToList(data);
	})

	$('#showTheRooms').on('click', function () {
		socket.emit('displayRooms', { messsage: 'ready for rooms'});
	});

	function gameInit(data) {
		gameId = data.gameId;
		mySocketId = data.mySocketId;
		role = 'player1';
		numOfPlayers = 1;
		console.log(gameId, role);
		$('#welcome').html('<h2>Welcome Player 1</h2>');
	}

	function showRooms (data) {
		console.log(data);
		var roomDiv = $('<div>', {
			class: 'oneRoom',
		});
		for (var i = 0; i < data.length; i++) {
			var joinButton = $('<button>', {
				id: 'testroom',
				type: 'button',
				text: 'Join Room',
				value: data[i]
			});
			var pRoom = $('<p>'); // lol p room
			pRoom.append(data[i], joinButton);
			roomDiv.append(pRoom);
		}
		$('#displayRoom').html(roomDiv);
		
	}
	function addRoomToList (data) {
		var roomDiv = $('<div>', {
			class: 'oneRoom',
		});
		var joinButton = $('<button>', {
			id: 'testroom',
			type: 'button',
			text: 'Join Room',
			value: data
		});
		var pRoom = $('<p>'); // lol p room
		pRoom.append(data, joinButton);
		roomDiv.append(pRoom);
		$('#displayRoom').append(roomDiv);
	}

	// socket.on('newGameCreated', function (data) {
	// 	console.log(data)
	// })
	// socket.on('score', function (data) {
	// 	if ($('.test').children().length === 10) {
	// 		$('.test').html('');
	// 	}
	// 	$('.test').append('<div>' + data.name + '</div><br>')
	// })
	$('#test').on('click', function(e) {
		e.preventDefault()
		var name = $('#name').val();
		var addScore = {
			name: $('#name').val(),
			score: parseInt($('#score').val())
		}
		console.log(addScore);
		socket.emit('createRoom', addScore);

		// $.post('/game/score', addScore).done(function (response) {
			
		// 	console.log(response);

		// })
	})
	$('#displayRoom').on('click', 'button', function(e) {
		e.preventDefault();
		var room = $(this).attr('value');
		console.log(room)
		role = 'player2'
		numOfPlayers = 2;
		console.log(role)
		updateNumOfPlayers(room);
		$('#room').val('');
		$('#welcome').html('<h2>Welcome Player 2</h2>');
	})

	function updateNumOfPlayers (room) {
		if (numOfPlayers === 2) {
			socket.emit('player2Connected', {playerRoom: room});
			$('#testroom').hide();
		}
	}
	$('.question').on('click', function () {
		alert('test')
	})
	function initQuestions(data) {
		gameStarted = true;
		console.log(data.question, data.question.answer)
		theQuestion = data.question;
		theAnswer = data.question.answer;
		questionData = data;
		$('#choices').html('');
		console.log(data)
		// console.log(theQuestion);
		// send questions to the boxes
		$('#questionDisplay').text(theQuestion.question);
		for (var i = 0; i < data.question.choices.length; i++) {
			// var buttonChoice = $('<button>', {
			// 	type: 'button',
			// 	name: 'choice',
			// 	class: 'submitChoice btn btn-default',
			// 	value: data.question.choices[i]
			// });
			// buttonChoice.text(data.question.choices[i]);
			var buttonChoice = '<button type="button" name="choice" class="submitChoice btn btn-default" value="' + data.question.choices[i] + '" data-dismiss="modal">' + data.question.choices[i] + '</button>';
			$('#choices').append(buttonChoice);
		}
	}
	function runTimer(data){
		timer = setInterval(function () {
			decreaseTime(data);
		}, 1000);
    };
    function decreaseTime(data){
    	time--;
    	$('#gameRooms').html('<h2>Get Ready! Time to begin: ' + time + '</h2>'); 
    	if (time === 0) {
    		clearInterval(timer);
    		$('#gameRooms').html('');
    		socket.emit('countdownFinished', data)
    	}
    };

	function onStartCountdownTimer (data) {
		console.log(data)
		runTimer(data);
	}


var bombs = [];

		// Fisher-Yates Shuffle Algorithm:
		Array.prototype.shuffle = function() {
			var i = this.length, j, temp;
			while(--i > 0) {
				j = Math.floor(Math.random() * (i+1));
				temp = this[j];
				this[j] = this[i];
				this[i] = temp;
			}
			return this;
		}
		var shuffledBoxes = allBoxes.shuffle();


		// Chooses which boxes will be bombs:
		for (var i = 0; i < 5; i++) {
			bombs[i] = shuffledBoxes[i];
		}
		console.log("The bombs are: " + bombs);


		var surroundingBoxes = [
			[-1,-1],
			[0,-1],
			[1,-1],
			[-1,0],
			[1,0],
			[-1,1],
			[0,1],
			[1,1]
		];



$('.trivBox').on('click', function() {
	if (!gameStarted) {
	$(this).off('click');
} else {
		clicked_X = $(this).data('x');
	clicked_Y = $(this).data('y');
	var clickedBomb = false;
	var surroundingBombs = 0;

	for (var i = 0; i < bombs.length; i++) {
		if (clicked_X === $(bombs[i]).data('x') && clicked_Y === $(bombs[i]).data('y')) {
			clickedBomb = true;
			$(this).empty().removeClass().append('<img src="assets/images/skull.gif">');
			laugh.play();
			bombBox();
		}
	}
	if (!clickedBomb) {
		console.log(theQuestion, 'test');
		triviaBox();
		for (var i = 0; i < surroundingBoxes.length; i++) {
			// var surroundingBox_X = ;
			// var surroundingBox_Y = ;
			if ((clicked_X + surroundingBoxes[i][0]) >= 0 && (clicked_X + surroundingBoxes[i][0]) <= 4 && 
				(clicked_Y + surroundingBoxes[i][1]) >= 0 && (clicked_Y + surroundingBoxes[i][1]) <= 3) {
				for (var j = 0; j < bombs.length; j++) {
					if ((clicked_X + surroundingBoxes[i][0]) === $(bombs[j]).data('x') && 
						(clicked_Y + surroundingBoxes[i][1]) === $(bombs[j]).data('y')) {
						surroundingBombs++;
					}
				}
			}
		}
		// bombCheck();
      $(this).empty().removeClass().addClass('numberBox').append(surroundingBombs);
		$(this).off('click');
	}
}


});

	function triviaBox() {
		$("#questionModal").modal({backdrop: 'static', keyboard: false});	
	}

$('#choices').on('click', 'button', function () {
	console.log(questionData)
	var userAnswer = $(this).val();
	console.log(userAnswer);
	questionData.player = role;
	questionData.x = clicked_X;
	questionData.y = clicked_Y;
	questionData.lives = lives;
	if (userAnswer === questionData.question.answer) {
		score++;
		console.log('correct!');
		$('#score_number').html(score);
		questionData.score = score;
		socket.emit('answeredCorrectly', questionData);
	} else {
		console.log('wrong', lives);
		lives--;
		$('#game_lives').html(lives);
		if (lives === 0) {
			$('#game_lives').html('0');
			socket.emit('gameOver', questionData);
		} else {
			socket.emit('answeredWrong', questionData);
		}
	}
		$(this).off('click');
})

})

function displayFinal(data) {
	var gameFinishedMsg = data.message + " Your score is " + score + ". Come and play again!";
	$('#winner').html(gameFinishedMsg);
	$('#scoreModal').modal('show');
}


</script>
</body>
</html>

{{!-- need to pull everything from db and then use handlebars to add to 25 modals
also need to create the divs after making call from sql and then add the modal content inside
will be very annoying
pull from doug
 --}}

{{!-- //doug added this timer
				 function countdown( elementName, minutes, seconds )
		        {
		            var element, endTime, hours, mins, msLeft, time;
		            function twoDigits( n )
		            {
		                return (n <= 9 ? "0" + n : n);
		            }

		            function updateTimer()
		            {
		                msLeft = endTime - (+new Date);
		                if ( msLeft < 1000 ) {
		                    element.innerHTML = "Times Up!";
		                } else {
		                    time = new Date( msLeft );
		                    hours = time.getUTCHours();
		                    mins = time.getUTCMinutes();
		                    element.innerHTML = (hours ? hours + ':' + twoDigits( mins ) : mins) + ':' + twoDigits( time.getUTCSeconds() );
		                    setTimeout( updateTimer, time.getUTCMilliseconds() + 500 );
		                }
		            }
		            element = document.getElementById( elementName );
		            endTime = (+new Date) + 1000 * (60*minutes + seconds) + 500;
		            updateTimer();
		        }

		        countdown( "countdown", 0,10);
		        countdown( "countdown2", 0, 30 ); --}}